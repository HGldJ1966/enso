# Copyright (c) 2008, Humanized, Inc.
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#    1. Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#    2. Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
#    3. Neither the name of Enso nor the names of its contributors may
#       be used to endorse or promote products derived from this
#       software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY Humanized, Inc. ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL Humanized, Inc. BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#   Python Version - 2.4
#   This is the Cairo source code SConscript file.

# ----------------------------------------------------------------------------
# Imports
# ----------------------------------------------------------------------------

Import( "env" )

import glob


# ----------------------------------------------------------------------------
# Build Actions
# ----------------------------------------------------------------------------

env = env.Copy()

# Cairo exports all its functions using a .def file instead of in-line
# in its source code (i.e., using something like
# __declspec(dllexport)).  So we have to tell the linker to use the
# .def file.
cairoDefFileName = File( "cairo.def" ).path

env.Append(
    LINKFLAGS = ["/DEF:%s" % cairoDefFileName]
    )

sourceList = [
    "cairo-analysis-surface.c",
    "cairo-arc.c",
    "cairo-array.c",
    "cairo-atomic.c",
    "cairo-base64-stream.c",
    "cairo-base85-stream.c",
    "cairo-bentley-ottmann.c",
    "cairo-bentley-ottmann-rectangular.c",
    "cairo-bentley-ottmann-rectilinear.c",
    "cairo-botor-scan-converter.c",
    "cairo-boxes.c",
    "cairo.c",
    "cairo-cache.c",
    "cairo-clip.c",
    "cairo-color.c",
    "cairo-composite-rectangles.c",
    "cairo-debug.c",
    "cairo-device.c",
    "cairo-fixed.c",
    "cairo-font-face.c",
    "cairo-font-face-twin.c",
    "cairo-font-face-twin-data.c",
    "cairo-font-options.c",
    "cairo-freelist.c",
    "cairo-freed-pool.c",
    "cairo-gstate.c",
    "cairo-hash.c",
    "cairo-hull.c",
    "cairo-image-info.c",
    "cairo-image-surface.c",
    "cairo-lzw.c",
    "cairo-matrix.c",
    "cairo-recording-surface.c",
    "cairo-misc.c",
    "cairo-mutex.c",
    "cairo-observer.c",
    "cairo-output-stream.c",
    "cairo-paginated-surface.c",
    "cairo-path-bounds.c",
    "cairo-path.c",
    "cairo-path-fill.c",
    "cairo-path-fixed.c",
    "cairo-path-in-fill.c",
    "cairo-path-stroke.c",
    "cairo-pattern.c",
    "cairo-pen.c",
    "cairo-polygon.c",
    "cairo-rectangle.c",
    "cairo-rectangular-scan-converter.c",
    "cairo-region.c",
    "cairo-rtree.c",
    "cairo-scaled-font.c",
    "cairo-slope.c",
    "cairo-spans.c",
    "cairo-spline.c",
    "cairo-stroke-style.c",
    "cairo-surface.c",
    "cairo-surface-fallback.c",
    "cairo-surface-clipper.c",
    "cairo-surface-offset.c",
    "cairo-surface-snapshot.c",
    "cairo-surface-subsurface.c",
    "cairo-surface-wrapper.c",
    "cairo-system.c",
    "cairo-tor-scan-converter.c",
    "cairo-toy-font-face.c",
    "cairo-traps.c",
    "cairo-unicode.c",
    "cairo-user-font.c",
    "cairo-version.c",
    "cairo-wideint.c",
    "cairo-scaled-font-subsets-private.h",
    "cairo-truetype-subset-private.h",
    "cairo-type1-private.h",
    "cairo-type3-glyph-surface-private.h",
    "cairo-cff-subset.c",
    "cairo-scaled-font-subsets.c",
    "cairo-truetype-subset.c",
    "cairo-type1-fallback.c",
    "cairo-type1-subset.c",
    "cairo-type3-glyph-surface.c",
    "cairo-ft.h",
    "cairo-ft-private.h",
    "cairo-ft-font.c",
    "cairo-win32.h",
    "cairo-win32-private.h",
    "cairo-win32-surface.c",
    "cairo-win32-printing-surface.c"
    ]

libs = [
    "${FT2_LIB_NAME}",
    "${PIXMAN_LIB_NAME}",
    "Gdi32.lib",
    "User32.lib",
    "Msimg32.lib"
    ]

dllFile, expFile, libFile = env.SharedLibrary(
    target="${CAIRO_LIB_NAME}",
    source=sourceList,
    LIBS=libs
    )

env.Install( "${BASE_INSTALL_DIR}", dllFile )
